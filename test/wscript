#!/usr/bin/env python3
# -*- coding: utf-8 -*-
# Roman C. Podolski <mailto:roman.podolski@tum.de>

from waflib import Logs
from waflib.Tools import waf_unit_test 

def options(opt):
    opt.load('waf_unit_test')
    opt.add_option('--onlytests',
                   action='store_true',
                   default=True,
                   help='Exec unit tests only',
                   dest='only_tests')

def configure(conf):
    conf.load('waf_unit_test')
    conf.check(lib='gtest', uselib_store='GTEST')
    conf.check(lib='gtest_main', uselib_store='GTEST_MAIN')
    conf.check(lib='pthread', uselib_store='PTHREAD')

def gtest_results(bld):
    lst = getattr(bld, 'utest_results', [])
    if not lst:
        return
    for (f, code, out, err) in lst:
        output = str(out, 'utf-8').splitlines()
        for i, line in enumerate(output):
            if '[ RUN      ]' in line and code:
                i += 1
                if '    OK ]' in output[i]:
                    continue
                while not '[ ' in output[i]:
                    Logs.warn(output[i])
                    i += 1
            elif ' FAILED  ]' in line and code:
                Logs.error(line)
            elif ' PASSED  ]' in line:
                Logs.info(line)
def build(bld):
    bld.program(
        features='test',
        source='passing_test.cc failing_test.cc',
        target='unit_test',
        use='GTEST_MAIN GTEST PTHREAD'
    )
    bld.add_post_fun(waf_unit_test.set_exit_code)

    bld.add_post_fun(gtest_results)
    bld.options.all_tests = True
